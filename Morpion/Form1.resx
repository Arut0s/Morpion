<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACcAAAAnAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACYsCkAmLAoAJiwKACYsCgBl7AnA5WtIQGWrSMAla4iF5StIWKUrR+ok6wd2JKr
        HPKRqxr9kaoZ/ZCqF/KPqRbYjqgUqI6oEmKNpxEXjKcQAI2oEgGLpQwDiqULAYqlCwCKpQsAiqUKAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmbErAJmwKQCZsCkAmbEqApewJwOWsCYAl68lKJauJJuVriLulK0g/5St
        H/6TrB7/kqsc/5GrGv+Rqhn/kKoX/4+pFf+OqBT+jqgT/42nEe6Mpw+ci6YOKIylDQCLpQwDiaQJAoml
        CgCJpQoAiaQIAAAAAAAAAAAAAAAAAJqxLACZsSsAmbErAJmxKgObtCoAmbEpCZevJ42XryX7lq4k/5Wu
        I/+VriL9lK0f/JKsHP6Rqxv/kasa/5GqGf+Rqhj/kKkX/o6oFPyNpxH9jacQ/4ynD/+Lpg77i6YMjYmj
        CgmHoQkAiaQJA4mkCACJpAgAiKQHAAAAAACasi4AmrItAJqyLQCZsSsDmbAqAJmxKiWYsCnSl68n/5ev
        JvyXryX7lK0f/pCqGP+PqRX/j6kV/5CpFv+Rqhj/kasb/5KsHf+TrB7/k6we/5KrG/+OqBT+i6YO+4um
        DfyLpgz/iqUK0omkCSWJpQkAiaQIA4ijBgCIowYAiKMFAJuyLgCbsi4AmrEsA5mxKwCZsSwzmbEq65iw
        KP+YsCn6lq4j/o+pFv+Mpw//jKcQ/46oEv+PqRX/kKkX/5GqGf+Rqxr/kqwc/5OsHv+UrSH/lq4j/5au
        JP+TrB7/jKcQ/oqlCvqKpQv/iaQJ64mkBzSJpAgAiKQHA4ejBQCHowUAm7MvAJqyLQKasi0AmrItJ5qx
        LOqZsSr/mbEr+5StH/+Lpg3/iqUL/4ynD/+NpxH/jqgT/4+pFf+QqRf/kaoZ/5GrGv+SrBz/k6we/5St
        IP+VriL/lq4k/5iwKP+Xryb/jqgU/4mkCPuJpAn/iKQH6oijBieIowYAiKMGAoeiBACbsi4BnbExAJyy
        MAqasi3OmbEr/5qyLPuTrB3/iaQI/4qlCv+Mpg7/jagR/42nEf+OqBP/j6kV/5CpF/+Rqhn/kasa/5Ks
        HP+TrB7/lK0g/5WuIv+WriT/l68l/5iwKP+ZsSv/j6kW/4ijB/uJpAj/iKMGzoajAwqFpAIAh6MFAZuy
        LgObsi4Am7IvjJqyLf+bsi76lK0g/4ijBv+JpAn/i6UM/4ulDP+Howb/kawU/4+pFP+OqBT/kKkX/5Gq
        Gf+Rqxr/kqwc/5OsHv+UrSD/la4i/5auJP+Xryb/mLAn/5mxKv+asi3/jqgT/4ejBfqIowb/h6MEjIej
        BQCHowUDnLMwAJyzMC2bsi/6m7Iu/5iwKf6JpAj/iKMG/4qlCv+JpAn/kasV/5aoPf9whwH/jKcO/5Ot
        Gf+PqBf/kKoY/5GrGv+SrBz/k6we/5StIP+VriL/lq4k/5evJv+YsCj/mLAp/5qyLf+ZsSv/iqUK/oej
        Bf+HowT6hqIDLYaiAwCcszAAnLMwmpuyL/+cszD7jqgT/4aiAv+JpAj/iqUK/4mkCf+NqBH/8PPg/8PJ
        qP90iBn/fZcD/5WvGv+SrBv/kaoa/5KsHP+TrB7/lK0g/5WuIv+WriT/l68m/5iwKP+ZsSr/mbEr/5yz
        Mf+UrSD/hqID+4ejBP+GogOahqIDAJyzMhqcszDqnLMx/5evJv6GogP/iKMG/4ikB/+KpQr/iqUK/42n
        Ef/u8t3//////+3v5v+ZpWH/cYgG/4ymEf+XsB//kqsd/5OsHv+UrSD/la4i/5auJP+Xryb/mLAo/5mx
        Kv+asSz/mrIt/5yzMP+Lpg3+hqIC/4aiA+qGogEanLMyYpyzMP+dtDL9j6kW/4WhAP+Iowb/iKQH/4ql
        Cv+KpQr/jacR/+/z3////////f78///////O07j/fY4t/3uUB/+WsB7/lq8h/5OsIP+VriL/lq4k/5ev
        Jv+YsCj/mbEq/5qxLP+asi3/nbQz/5OsHf+FoQH9hqID/4aiAWKctDKnnLMx/5uyL/yJpAn/hqIC/4ij
        Bv+IpAf/iqUK/4qlCv+NpxH/8PPf///////9/fz//f38///////29vP/p7F6/3OIEf+KoxP/mrMl/5Wu
        I/+VriT/l68m/5iwKP+ZsSr/mrEs/5qyLf+cszH/mbEq/4ejBPyGogL/hqEBppy0MtadtDL/mLAp/oai
        Av+HogP/iKMG/4ikB/+KpQr/iqUK/42nEf/w89////////7+/f///////f38//7+/f//////29/M/4eW
        Qf95kQv/l7Ah/5qyKP+Wryb/mLAo/5mxKv+asSz/mrIt/5uzMP+cszH/iqUK/oWhAf+GoQHWnLQy8Z20
        M/+VriP+haEA/4eiBP+IowX/iKQH/4qlCv+KpQr/jacR//Dz3////////v79/////////////v7+//39
        /P//////+/z7/7a9kv92ihv/h6AU/5mxKP+XsCj/mbEq/5qxLP+asi7/m7Mv/520M/+NpxD+haEA/4ah
        AfGctDL9nbQz/5StIP+EoQD/h6ME/4ijBf+IpAf/iqUK/4qlCv+NpxH/8PPf///////+/v3/////////
        //////////////3+/P/9/vz//////+rr5v+XpF7/jqYe/5qyKv+YsCr/mrEs/5qyLv+bsi//nrQ0/46o
        E/+FoQD/hqEB/Zy0Mv2dtDP/lK0g/4ShAP+HowT/iKMF/4ikB/+KpQr/iqUK/42nEf/w89////////7+
        /f///////////////////////v79//7+/f//////9vno/7fIZf+TrCD/mbEp/5mxKv+asSz/mrIu/5uy
        L/+etDT/jqgT/4WhAP+GoQH9nLQy8Z20M/+VriP+haEA/4eiBP+IowX/iKQH/4qlCv+KpQr/jacR//Dz
        3////////v79/////////////v/+//3+/P///////f77/83Zl/+VrSL/j6kW/5iwKP+YsCj/mbEq/5qx
        LP+asi7/m7Mv/520M/+NpxD+haEA/4ahAfGctDLWnbQy/5iwKf6GogL/h6ID/4ijBv+IpAf/iqUK/4ql
        Cv+NpxH/8PPf///////+/v3///////7+/P/+/v3//////+jtzv+nvEj/jKcP/5StIf+Xryf/l68m/5iw
        KP+ZsSr/mrEs/5qyLf+bszD/nLMx/4qlCv6FoQH/hqEB1py0MqecszH/m7Iv/ImkCf+GogL/iKMG/4ik
        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
        AAKgAAAFUAAACqgAABXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>